version: '3.8'

services:
  app:
    container_name: play_ke
    image: osiru/play_ke:${BACKEND_TAG}
    working_dir: /usr/src/app
    ports:
      - "8015:8015"
    depends_on:
      - postgres
    environment:
      - ENV=production
      - DEBUG=0
      - DJANGO_SECRET_KEY=django-insecure-fmq&5@^#yv*$lmqc8o+q(_#v)_9n#&u*_=lwz+=ty^@)6b@v=m
      - USE_S3=0
      - ALLOWED_HOST=*
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - DB_IGNORE_SSL=true
    volumes:
      - .:/usr/src/app
      - ./staticfiles:/usr/src/app/staticfiles
      - play_ke_logs:/var/log/play-ke
    networks:
      - play_ke_app_net
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: "1.5"

  postgres:
    image: postgres:16
    ports:
      - "5442:5432"
    volumes:
      - play_ke_app_pg:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    networks:
      - play_ke_app_net
    deploy:
      resources:
        limits:
          memory: 1G

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin

  mongo-express:
    image: mongo-express:1.0
    container_name: mongo-express
    ports:
      - "8082:8081"  # Web UI port
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb  # Links to your MongoDB service
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin  # From your MongoDB setup
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin
      ME_CONFIG_BASICAUTH_USERNAME: admin  # Optional: Secure the UI
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      - mongodb


  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafdrop:
    image: obsidiandynamics/kafdrop
    ports:
      - "9000:9000"  # HostPort:ContainerPort
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"  # Points to your Kafka broker
    depends_on:
      - kafka


volumes:
  portainer_data:
  play_ke_app_pg:
  play_ke_logs:
    driver: local

networks:
  play_ke_app_net:
    driver: bridge
